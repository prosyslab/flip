#!/bin/bash

sed -i "s/PassConfig.options/options/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i "s/cx.setLanguageVersion(VERSION_1_5);/cx.setLanguageVersion(Context.VERSION_1_5);/g" src/com/google/javascript/jscomp/parsing/ParserRunner.java
sed -i "s/class LiveVariablesAnalysis extends DataFlowAnalysis<Node, LiveVariableLattice> {/class LiveVariablesAnalysis extends DataFlowAnalysis<Node, LiveVariablesAnalysis.LiveVariableLattice> {/g" src/com/google/javascript/jscomp/LiveVariablesAnalysis.java
sed -i "s/public static ErrorReporter forNewRhino() {/public static com.google.javascript.jscomp.mozilla.rhino.ErrorReporter forNewRhino() {/g" src/com/google/javascript/jscomp/parsing/NullErrorReporter.java
sed -i "s/return (node.getType() == Token.GETPROP) || (node.getType() == Token.GETELEM);/return (node.getType() == com.google.javascript.rhino.head.Token.GETPROP) || (node.getType() == com.google.javascript.rhino.head.Token.GETELEM);/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/return (node.getType() == Token.EXPR_RESULT) || (node.getType() == Token.EXPR_VOID);/return (node.getType() == com.google.javascript.rhino.head.Token.EXPR_RESULT) || (node.getType() == com.google.javascript.rhino.head.Token.EXPR_VOID);/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ERROR/case com.google.javascript.jscomp.mozilla.rhino.Token.ERROR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EOF/case com.google.javascript.jscomp.mozilla.rhino.Token.EOF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EOL/case com.google.javascript.jscomp.mozilla.rhino.Token.EOL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ENTERWITH/case com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LEAVEWITH/case com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RETURN/case com.google.javascript.jscomp.mozilla.rhino.Token.RETURN/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GOTO/case com.google.javascript.jscomp.mozilla.rhino.Token.GOTO/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.IFEQ/case com.google.javascript.jscomp.mozilla.rhino.Token.IFEQ/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.IFNE/case com.google.javascript.jscomp.mozilla.rhino.Token.IFNE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETNAME/case com.google.javascript.jscomp.mozilla.rhino.Token.SETNAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BITOR/case com.google.javascript.jscomp.mozilla.rhino.Token.BITOR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BITXOR/case com.google.javascript.jscomp.mozilla.rhino.Token.BITXOR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BITAND/case com.google.javascript.jscomp.mozilla.rhino.Token.BITAND/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EQ/case com.google.javascript.jscomp.mozilla.rhino.Token.EQ/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NE/case com.google.javascript.jscomp.mozilla.rhino.Token.NE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LT/case com.google.javascript.jscomp.mozilla.rhino.Token.LT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LE/case com.google.javascript.jscomp.mozilla.rhino.Token.LE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GT/case com.google.javascript.jscomp.mozilla.rhino.Token.GT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GE/case com.google.javascript.jscomp.mozilla.rhino.Token.GE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LSH/case com.google.javascript.jscomp.mozilla.rhino.Token.LSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RSH/case com.google.javascript.jscomp.mozilla.rhino.Token.RSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.URSH/case com.google.javascript.jscomp.mozilla.rhino.Token.URSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ADD/case com.google.javascript.jscomp.mozilla.rhino.Token.ADD/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SUB/case com.google.javascript.jscomp.mozilla.rhino.Token.SUB/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.MUL/case com.google.javascript.jscomp.mozilla.rhino.Token.MUL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DIV/case com.google.javascript.jscomp.mozilla.rhino.Token.DIV/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.MOD/case com.google.javascript.jscomp.mozilla.rhino.Token.MOD/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NOT/case com.google.javascript.jscomp.mozilla.rhino.Token.NOT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BITNOT/case com.google.javascript.jscomp.mozilla.rhino.Token.BITNOT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.POS/case com.google.javascript.jscomp.mozilla.rhino.Token.POS/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NEG/case com.google.javascript.jscomp.mozilla.rhino.Token.NEG/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NEW/case com.google.javascript.jscomp.mozilla.rhino.Token.NEW/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DELPROP/case com.google.javascript.jscomp.mozilla.rhino.Token.DELPROP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TYPEOF/case com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GETPROP/case com.google.javascript.jscomp.mozilla.rhino.Token.GETPROP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETPROP/case com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GETELEM/case com.google.javascript.jscomp.mozilla.rhino.Token.GETELEM/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETELEM/case com.google.javascript.jscomp.mozilla.rhino.Token.SETELEM/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CALL/case com.google.javascript.jscomp.mozilla.rhino.Token.CALL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NAME/case com.google.javascript.jscomp.mozilla.rhino.Token.NAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NUMBER/case com.google.javascript.jscomp.mozilla.rhino.Token.NUMBER/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.STRING/case com.google.javascript.jscomp.mozilla.rhino.Token.STRING/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.NULL/case com.google.javascript.jscomp.mozilla.rhino.Token.NULL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.THIS/case com.google.javascript.jscomp.mozilla.rhino.Token.THIS/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.FALSE/case com.google.javascript.jscomp.mozilla.rhino.Token.FALSE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TRUE/case com.google.javascript.jscomp.mozilla.rhino.Token.TRUE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SHEQ/case com.google.javascript.jscomp.mozilla.rhino.Token.SHEQ/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SHNE/case com.google.javascript.jscomp.mozilla.rhino.Token.SHNE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REGEXP/case com.google.javascript.jscomp.mozilla.rhino.Token.REGEXP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BINDNAME/case com.google.javascript.jscomp.mozilla.rhino.Token.BINDNAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.THROW/case com.google.javascript.jscomp.mozilla.rhino.Token.THROW/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RETHROW/case com.google.javascript.jscomp.mozilla.rhino.Token.RETHROW/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.IN/case com.google.javascript.jscomp.mozilla.rhino.Token.IN/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.INSTANCEOF/case com.google.javascript.jscomp.mozilla.rhino.Token.INSTANCEOF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LOCAL_LOAD/case com.google.javascript.jscomp.mozilla.rhino.Token.LOCAL_LOAD/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GETVAR/case com.google.javascript.jscomp.mozilla.rhino.Token.GETVAR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETVAR/case com.google.javascript.jscomp.mozilla.rhino.Token.SETVAR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CATCH_SCOPE/case com.google.javascript.jscomp.mozilla.rhino.Token.CATCH_SCOPE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ENUM_INIT_KEYS/case com.google.javascript.jscomp.mozilla.rhino.Token.ENUM_INIT_KEYS/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ENUM_INIT_VALUES/case com.google.javascript.jscomp.mozilla.rhino.Token.ENUM_INIT_VALUES/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ENUM_NEXT/case com.google.javascript.jscomp.mozilla.rhino.Token.ENUM_NEXT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ENUM_ID/case com.google.javascript.jscomp.mozilla.rhino.Token.ENUM_ID/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.THISFN/case com.google.javascript.jscomp.mozilla.rhino.Token.THISFN/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RETURN_RESULT/case com.google.javascript.jscomp.mozilla.rhino.Token.RETURN_RESULT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ARRAYLIT/case com.google.javascript.jscomp.mozilla.rhino.Token.ARRAYLIT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.OBJECTLIT/case com.google.javascript.jscomp.mozilla.rhino.Token.OBJECTLIT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GET_REF/case com.google.javascript.jscomp.mozilla.rhino.Token.GET_REF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SET_REF/case com.google.javascript.jscomp.mozilla.rhino.Token.SET_REF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DEL_REF/case com.google.javascript.jscomp.mozilla.rhino.Token.DEL_REF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_CALL/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_CALL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_SPECIAL/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_SPECIAL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DEFAULTNAMESPACE/case com.google.javascript.jscomp.mozilla.rhino.Token.DEFAULTNAMESPACE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ESCXMLTEXT/case com.google.javascript.jscomp.mozilla.rhino.Token.ESCXMLTEXT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ESCXMLATTR/case com.google.javascript.jscomp.mozilla.rhino.Token.ESCXMLATTR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_MEMBER/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_MEMBER/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_NS_MEMBER/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_NS_MEMBER/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_NAME/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_NAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.REF_NS_NAME/case com.google.javascript.jscomp.mozilla.rhino.Token.REF_NS_NAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TRY/case com.google.javascript.jscomp.mozilla.rhino.Token.TRY/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SEMI/case com.google.javascript.jscomp.mozilla.rhino.Token.SEMI/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LB/case com.google.javascript.jscomp.mozilla.rhino.Token.LB/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RB/case com.google.javascript.jscomp.mozilla.rhino.Token.RB/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LC/case com.google.javascript.jscomp.mozilla.rhino.Token.LC/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RC/case com.google.javascript.jscomp.mozilla.rhino.Token.RC/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LP/case com.google.javascript.jscomp.mozilla.rhino.Token.LP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RP/case com.google.javascript.jscomp.mozilla.rhino.Token.RP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.COMMA/case com.google.javascript.jscomp.mozilla.rhino.Token.COMMA/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_BITOR/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITOR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_BITXOR/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITXOR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_BITAND/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITAND/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_LSH/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_LSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_RSH/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_RSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_URSH/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_URSH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_ADD/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_ADD/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_SUB/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_SUB/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_MUL/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_MUL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_DIV/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_DIV/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ASSIGN_MOD/case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_MOD/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.HOOK/case com.google.javascript.jscomp.mozilla.rhino.Token.HOOK/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.COLON/case com.google.javascript.jscomp.mozilla.rhino.Token.COLON/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.OR/case com.google.javascript.jscomp.mozilla.rhino.Token.OR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.AND/case com.google.javascript.jscomp.mozilla.rhino.Token.AND/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.INC/case com.google.javascript.jscomp.mozilla.rhino.Token.INC/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DEC/case com.google.javascript.jscomp.mozilla.rhino.Token.DEC/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DOT/case com.google.javascript.jscomp.mozilla.rhino.Token.DOT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.FUNCTION/case com.google.javascript.jscomp.mozilla.rhino.Token.FUNCTION/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EXPORT/case com.google.javascript.jscomp.mozilla.rhino.Token.EXPORT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.IMPORT/case com.google.javascript.jscomp.mozilla.rhino.Token.IMPORT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.IF/case com.google.javascript.jscomp.mozilla.rhino.Token.IF/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.ELSE/case com.google.javascript.jscomp.mozilla.rhino.Token.ELSE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SWITCH/case com.google.javascript.jscomp.mozilla.rhino.Token.SWITCH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CASE/case com.google.javascript.jscomp.mozilla.rhino.Token.CASE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DEFAULT/case com.google.javascript.jscomp.mozilla.rhino.Token.DEFAULT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.WHILE/case com.google.javascript.jscomp.mozilla.rhino.Token.WHILE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DO/case com.google.javascript.jscomp.mozilla.rhino.Token.DO/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.FOR/case com.google.javascript.jscomp.mozilla.rhino.Token.FOR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BREAK/case com.google.javascript.jscomp.mozilla.rhino.Token.BREAK/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CONTINUE/case com.google.javascript.jscomp.mozilla.rhino.Token.CONTINUE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.VAR/case com.google.javascript.jscomp.mozilla.rhino.Token.VAR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.WITH/case com.google.javascript.jscomp.mozilla.rhino.Token.WITH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CATCH/case com.google.javascript.jscomp.mozilla.rhino.Token.CATCH/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.FINALLY/case com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.VOID/case com.google.javascript.jscomp.mozilla.rhino.Token.VOID/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.RESERVED/case com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EMPTY/case com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.BLOCK/case com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LABEL/case com.google.javascript.jscomp.mozilla.rhino.Token.LABEL/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TARGET/case com.google.javascript.jscomp.mozilla.rhino.Token.TARGET/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LOOP/case com.google.javascript.jscomp.mozilla.rhino.Token.LOOP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EXPR_VOID/case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.EXPR_RESULT/case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.JSR/case com.google.javascript.jscomp.mozilla.rhino.Token.JSR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SCRIPT/case com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TYPEOFNAME/case com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOFNAME/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.USE_STACK/case com.google.javascript.jscomp.mozilla.rhino.Token.USE_STACK/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETPROP_OP/case com.google.javascript.jscomp.mozilla.rhino.Token.SETPROP_OP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETELEM_OP/case com.google.javascript.jscomp.mozilla.rhino.Token.SETELEM_OP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.LOCAL_BLOCK/case com.google.javascript.jscomp.mozilla.rhino.Token.LOCAL_BLOCK/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SET_REF_OP/case com.google.javascript.jscomp.mozilla.rhino.Token.SET_REF_OP/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DOTDOT/case com.google.javascript.jscomp.mozilla.rhino.Token.DOTDOT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.COLONCOLON/case com.google.javascript.jscomp.mozilla.rhino.Token.COLONCOLON/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.XML/case com.google.javascript.jscomp.mozilla.rhino.Token.XML/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DOTQUERY/case com.google.javascript.jscomp.mozilla.rhino.Token.DOTQUERY/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.XMLATTR/case com.google.javascript.jscomp.mozilla.rhino.Token.XMLATTR/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.XMLEND/case com.google.javascript.jscomp.mozilla.rhino.Token.XMLEND/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TO_OBJECT/case com.google.javascript.jscomp.mozilla.rhino.Token.TO_OBJECT/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.TO_DOUBLE/case com.google.javascript.jscomp.mozilla.rhino.Token.TO_DOUBLE/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.GET/case com.google.javascript.jscomp.mozilla.rhino.Token.GET/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SET/case com.google.javascript.jscomp.mozilla.rhino.Token.SET/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.CONST/case com.google.javascript.jscomp.mozilla.rhino.Token.CONST/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.SETCONST/case com.google.javascript.jscomp.mozilla.rhino.Token.SETCONST/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/case Token.DEBUGGER/case com.google.javascript.jscomp.mozilla.rhino.Token.DEBUGGER/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/ Token.EXPR_VOID/ com.google.javascript.rhino.head.Token.EXPR_VOID/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
#sed -i "s/Token./com.google.javascript.rhino.head.Token./g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/public class Scope implements StaticScope<JSType> , StaticSymbolTable<Var, Var> {/public class Scope implements StaticScope<JSType> , StaticSymbolTable<Scope.Var, Scope.Var> {/g" src/com/google/javascript/jscomp/Scope.java
sed -i "s/public final class SymbolTable implements StaticSymbolTable<Symbol, Reference> {/public final class SymbolTable implements StaticSymbolTable<SymbolTable.Symbol, SymbolTable.Reference> {/g" src/com/google/javascript/jscomp/SymbolTable.java
sed -i "s/class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {/class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, ReferenceCollectingCallback.Reference> {/g" src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
sed -i "s/class GlobalNamespace implements StaticScope<JSType> , StaticSymbolTable<Name, Ref> {/class GlobalNamespace implements StaticScope<JSType> , StaticSymbolTable<GlobalNamespace.Name, GlobalNamespace.Ref> {/g" src/com/google/javascript/jscomp/GlobalNamespace.java
sed -i "s/class ControlFlowGraph<N> extends LinkedDirectedGraph<N, Branch> {/class ControlFlowGraph<N> extends LinkedDirectedGraph<N, ControlFlowGraph.Branch> {/g" src/com/google/javascript/jscomp/ControlFlowGraph.java
sed -i "s/class NameReferenceGraph extends LinkedDirectedGraph<Name, Reference> implements DefinitionProvider {/class NameReferenceGraph extends LinkedDirectedGraph<NameReferenceGraph.Name, NameReferenceGraph.Reference> implements DefinitionProvider {/g" src/com/google/javascript/jscomp/NameReferenceGraph.java
sed -i "s/final class PreprocessorSymbolTable implements StaticScope<JSType> , StaticSymbolTable<SimpleSlot, Reference> {/final class PreprocessorSymbolTable implements StaticScope<JSType> , StaticSymbolTable<SimpleSlot, PreprocessorSymbolTable.Reference> {/g" src/com/google/javascript/jscomp/PreprocessorSymbolTable.java
sed -i "s/void recordInterfaces(T type, T relatedType, Property p);/void recordInterfaces(T type, T relatedType, DisambiguateProperties<T>.Property p);/g" src/com/google/javascript/jscomp/DisambiguateProperties.java
sed -i "s/public void recordInterfaces(JSType type, JSType relatedType, Property p) {/public void recordInterfaces(JSType type, JSType relatedType, DisambiguateProperties<JSType>.Property p) {/g" src/com/google/javascript/jscomp/DisambiguateProperties.java
sed -i "s/public void recordInterfaces(ConcreteType type, ConcreteType relatedType, Property p) {/public void recordInterfaces(ConcreteType type, ConcreteType relatedType, DisambiguateProperties<ConcreteType>.Property p) {/g" src/com/google/javascript/jscomp/DisambiguateProperties.java
sed -i "s/class MaybeReachingVariableUse extends DataFlowAnalysis<Node, ReachingUses> {/class MaybeReachingVariableUse extends DataFlowAnalysis<Node, MaybeReachingVariableUse.ReachingUses> {/g" src/com/google/javascript/jscomp/MaybeReachingVariableUse.java
sed -i "s/final class MustBeReachingVariableDef extends DataFlowAnalysis<Node, MustDef> {/final class MustBeReachingVariableDef extends DataFlowAnalysis<Node, MustBeReachingVariableDef.MustDef> {/g" src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
sed -i "s/private final ErrorReporter oldErrorReporter = RhinoErrorReporter.forOldRhino(this);/private final com.google.javascript.rhino.ErrorReporter oldErrorReporter = RhinoErrorReporter.forOldRhino(this);/g" src/com/google/javascript/jscomp/Compiler.java
sed -i "s/private String inputCharset = UTF_8.name();/private String inputCharset = Charsets.UTF_8.name();/g" src/com/google/javascript/jscomp/SourceFile.java
sed -i "s/private final com.google.javascript.rhino.head.ErrorReporter defaultErrorReporter = RhinoErrorReporter.forNewRhino(this);/private final ErrorReporter defaultErrorReporter = RhinoErrorReporter.forNewRhino(this);/g" src/com/google/javascript/jscomp/Compiler.java
sed -i "s/private static final Pattern GLOBAL_SYMBOL_NAMESPACE_PATTERN = Pattern.compile(\"^\[a-zA-Z0-9\$_]+$\");/private static final java.util.regex.Pattern GLOBAL_SYMBOL_NAMESPACE_PATTERN = java.util.regex.Pattern.compile(\"^[a-zA-Z0-9\$_]+$\");/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i "s/Files.write(na.getHtmlReport(), new File(reportPath), UTF_8);/Files.write(na.getHtmlReport(), new File(reportPath), Charsets.UTF_8);/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i "s/Files.write(DotFormatter.toDot(gc.getNameReferenceGraph()), new File(graphFileName), UTF_8);/Files.write(DotFormatter.toDot(gc.getNameReferenceGraph()), new File(graphFileName), Charsets.UTF_8);/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i "s/Files.write(report.getHtmlReport(), new File(reportFileName), UTF_8);/Files.write(report.getHtmlReport(), new File(reportFileName), Charsets.UTF_8);/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i "s/lines = CharStreams.readLines(CharStreams.newReaderSupplier(ByteStreams.newInputStreamSupplier(bytes), UTF_8));/lines = CharStreams.readLines(CharStreams.newReaderSupplier(ByteStreams.newInputStreamSupplier(bytes), Charsets.UTF_8));/g" src/com/google/javascript/jscomp/VariableMap.java
sed -i "s/return new JSSourceFile(SourceFile.fromFile(fileName, UTF_8));/return new JSSourceFile(SourceFile.fromFile(fileName, Charsets.UTF_8));/g" src/com/google/javascript/jscomp/JSSourceFile.java
sed -i "s/return new JSSourceFile(SourceFile.fromFile(file, UTF_8));/return new JSSourceFile(SourceFile.fromFile(file, Charsets.UTF_8));/g" src/com/google/javascript/jscomp/JSSourceFile.java
sed -i "s/sb.append(LOWER_CAMEL.to(UPPER_UNDERSCORE, ((PlaceholderReference) (part)).getName()));/sb.append(CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, ((PlaceholderReference) (part)).getName()));/g" src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
sed -i "s/byte\[] tmp = str.getBytes(UTF_8);/byte[] tmp = str.getBytes(Charsets.UTF_8);/g" src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
sed -i "s/return UPPER_UNDERSCORE.to(LOWER_CAMEL, input);/return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, input);/g" src/com/google/javascript/jscomp/JsMessageVisitor.java
sed -i "s/return UPPER_UNDERSCORE.to(LOWER_CAMEL, input.substring(0, suffixStart)) + input.substring(suffixStart);/return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, input.substring(0, suffixStart)) + input.substring(suffixStart);/g" src/com/google/javascript/jscomp/JsMessageVisitor.java
sed -i "s/Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), UTF_8);/Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), Charsets.UTF_8);/g" src/com/google/javascript/jscomp/PureFunctionIdentifier.java
sed -i "s/public static ErrorReporter forNewRhino(AbstractCompiler compiler) {/public static com.google.javascript.jscomp.mozilla.rhino.ErrorReporter forNewRhino(AbstractCompiler compiler) {/g" src/com/google/javascript/jscomp/RhinoErrorReporter.java
sed -i "s/return loadWhitelistedJsWarnings(Files.newReaderSupplier(file, UTF_8));/return loadWhitelistedJsWarnings(Files.newReaderSupplier(file, Charsets.UTF_8));/g" src/com/google/javascript/jscomp/WhitelistWarningsGuard.java
sed -i "s/return ((\!shortcutMode) || hasDependencies) || WHITESPACE.matchesAllOf(line);/return ((\!shortcutMode) || hasDependencies) || CharMatcher.WHITESPACE.matchesAllOf(line);/g" src/com/google/javascript/jscomp/deps/DepsFileParser.java
sed -i "s/return ((\!shortcutMode) || lineHasProvidesOrRequires) || WHITESPACE.matchesAllOf(line);/return ((\!shortcutMode) || lineHasProvidesOrRequires) || CharMatcher.WHITESPACE.matchesAllOf(line);/g" src/com/google/javascript/jscomp/deps/JsFileParser.java
sed -i "s/return ((\!shortcutMode) || hasFunctions) || WHITESPACE.matchesAllOf(line);/return ((\!shortcutMode) || hasFunctions) || CharMatcher.WHITESPACE.matchesAllOf(line);/g" src/com/google/javascript/jscomp/deps/JsFunctionParser.java
sed -i "s/return ((\!shortcutMode) || hasProvidesOrRequires) || WHITESPACE.matchesAllOf(line);/return ((\!shortcutMode) || hasProvidesOrRequires) || CharMatcher.WHITESPACE.matchesAllOf(line);/g" src/com/google/javascript/jscomp/deps/JsFileParser.java
sed -i "s/private Node processGeneric(Node n) {/private Node processGeneric(com.google.javascript.jscomp.mozilla.rhino.Node n) {/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/for (Node child : n) {/for (com.google.javascript.jscomp.mozilla.rhino.Node child : n) {/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/this.task.log(error.format(level, this.formatter), MSG_ERR);/this.task.log(error.format(level, this.formatter), Project.MSG_ERR);/g" src/com/google/javascript/jscomp/ant/AntErrorManager.java
sed -i "s/this.task.log(error.format(level, this.formatter), MSG_WARN);/this.task.log(error.format(level, this.formatter), Project.MSG_WARN);/g" src/com/google/javascript/jscomp/ant/AntErrorManager.java
sed -i "s/for (Node child : rootNode) {/for (com.google.javascript.jscomp.mozilla.rhino.Node child : rootNode) {/g" src/com/google/javascript/jscomp/parsing/IRFactory.java

sed -i "s/\.setAttribute(VALUE/.setAttribute(TagAttr.VALUE/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(DIRECTIVE/.setAttribute(TagAttr.DIRECTIVE/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(NAME/.setAttribute(TagAttr.NAME/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(OP/.setAttribute(TagAttr.OP/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(FLAGS/.setAttribute(TagAttr.FLAGS/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(BODY/.setAttribute(TagAttr.BODY/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(TYPE/.setAttribute(TagAttr.TYPE/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(LABEL/.setAttribute(TagAttr.LABEL/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/\.setAttribute(IS_PREFIX/.setAttribute(TagAttr.IS_PREFIX/g" src/com/google/javascript/jscomp/jsonml/Writer.java
#sed -i "s/\.setAttribute(/.setAttribute(TagAttr./g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/ NewExpr/ TagType.NewExpr/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/ DeleteExpr/ TagType.DeleteExpr/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/ TypeofExpr/ TagType.TypeofExpr/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processCase(node, currentParent, Case);/processCase(node, currentParent, TagType.Case);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processCase(node, currentParent, DefaultCase);/processCase(node, currentParent, TagType.DefaultCase);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processLoop(node, currentParent, WhileStmt);/processLoop(node, currentParent, TagType.WhileStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processLoop(node, currentParent, DoWhileStmt);/processLoop(node, currentParent, TagType.DoWhileStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processJmp(node, currentParent, BreakStmt);/processJmp(node, currentParent, TagType.BreakStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processJmp(node, currentParent, ContinueStmt);/processJmp(node, currentParent, TagType.ContinueStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processTwoArgExpr(node, currentParent, AssignExpr, op);/processTwoArgExpr(node, currentParent, TagType.AssignExpr, op);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processTwoArgExpr(node, currentParent, BinaryExpr, op);/processTwoArgExpr(node, currentParent, TagType.BinaryExpr, op);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processLoop(node, currentParent, ForInStmt);/processLoop(node, currentParent, TagType.ForInStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processLoop(node, currentParent, ForStmt);/processLoop(node, currentParent, TagType.ForStmt);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processTwoArgExpr(node, currentParent, LogicalOrExpr);/processTwoArgExpr(node, currentParent, TagType.LogicalOrExpr);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/processTwoArgExpr(node, currentParent, LogicalAndExpr);/processTwoArgExpr(node, currentParent, TagType.LogicalAndExpr);/g" src/com/google/javascript/jscomp/jsonml/Writer.java
sed -i "s/, OP/, TagAttr.OP/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateChildType(element, IdPatt, 0);/validateChildType(element, TagType.IdPatt, 0);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateChildType(element, BlockStmt, 1);/validateChildType(element, TagType.BlockStmt, 1);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateChildType(element, IdPatt, i);/validateChildType(element, TagType.IdPatt, i);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateArgument(element, BODY);/validateArgument(element, TagAttr.BODY);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateArgument(element, FLAGS);/validateArgument(element, TagAttr.FLAGS);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateArgument(element, IS_PREFIX);/validateArgument(element, TagAttr.IS_PREFIX);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/ NAME/ TagAttr.NAME/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/ LABEL/ TagAttr.LABEL/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateArgument(element, TYPE);/validateArgument(element, TagAttr.TYPE);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/if (((type = ((String) (element.getAttribute(TYPE)))) \!= null) \&\& type.equals(\"null\")) {/if (((type = ((String) (element.getAttribute(TagAttr.TYPE)))) \!= null) \&\& type.equals(\"null\")) {/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/ VALUE/ TagAttr.VALUE/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateChildType(element, Case, i);/validateChildType(element, TagType.Case, i);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/ BlockStmt/ TagType.BlockStmt/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/validateChildType(element, ParamDecl, 1);/validateChildType(element, TagType.ParamDecl, 1);/g" src/com/google/javascript/jscomp/jsonml/Validator.java
sed -i "s/Object obj = jsonml.getAttribute(SOURCE);/Object obj = jsonml.getAttribute(TagAttr.SOURCE);/g" src/com/google/javascript/jscomp/jsonml/JsonMLAst.java
sed -i "s/, OP);/, TagAttr.OP);/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/String op = getAttribute(element, OP, String.class);/String op = getAttribute(element, TagAttr.OP, String.class);/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, FLAGS/, TagAttr.FLAGS/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, BODY/, TagAttr.BODY/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, DIRECTIVE);/, TagAttr.DIRECTIVE);/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, VALUE/, TagAttr.VALUE/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, TYPE)/, TagAttr.TYPE)/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/String label = getOptionalAttribute(element, LABEL, String.class);/String label = getOptionalAttribute(element, TagAttr.LABEL, String.class);/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/String label = getStringAttribute(element, LABEL);/String label = getStringAttribute(element, TagAttr.LABEL);/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, NAME/, TagAttr.NAME/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/, IS_PREFIX/, TagAttr.IS_PREFIX/g" src/com/google/javascript/jscomp/jsonml/Reader.java
sed -i "s/(ScriptRuntime.getMessage0(\"msg.extra.trailing.comma\")/(com.google.javascript.jscomp.mozilla.rhino.ScriptRuntime.getMessage0(\"msg.extra.trailing.comma\")/g" src/com/google/javascript/jscomp/RhinoErrorReporter.java
sed -i "s/(ScriptRuntime.getMessage0(\"msg.dup.parms\")/(com.google.javascript.jscomp.mozilla.rhino.ScriptRuntime.getMessage0(\"msg.dup.parms\")/g" src/com/google/javascript/jscomp/RhinoErrorReporter.java
sed -i "s/(ScriptRuntime.getMessage0(\"msg.too.deep.parser.recursion\")/(com.google.javascript.rhino.head.ScriptRuntime.getMessage0(\"msg.too.deep.parser.recursion\")/g" src/com/google/javascript/jscomp/RhinoErrorReporter.java
sed -i "s/, UTF_8/, Charsets.UTF_8/g" src/com/google/javascript/jscomp/WhitelistWarningsGuard.java
sed -i "s/Files.append(na.getHtmlReport(), new File(reportPath), UTF_8);/Files.append(na.getHtmlReport(), new File(reportPath), Charsets.UTF_8);/g" src/com/google/javascript/jscomp/DefaultPassConfig.java
#sed -i "s/return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException(message);/return new com.google.javascript.rhino.EvaluatorException(message);/g" src/com/google/javascript/jscomp/parsing/NullErrorReporter.java
sed -i "s/private static class NewRhinoNullReporter extends NullErrorReporter implements com.google.javascript.jscomp.mozilla.rhino.ErrorReporter {/private static class NewRhinoNullReporter extends NullErrorReporter implements com.google.javascript.jscomp.mozilla.rhino.ErrorReporter {/g" src/com/google/javascript/jscomp/parsing/NullErrorReporter.java
sed -i "s/Node node = new FunctionNode(name.getIdentifier());/Node node = new com.google.javascript.rhino.FunctionNode(name.getIdentifier());/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/errorReporter.error(\"Unsupported syntax: \" + Token.typeToName(node.getType()), sourceName, node.getLineno(), \"\", 0);/errorReporter.error(\"Unsupported syntax: \" + com.google.javascript.jscomp.mozilla.rhino.Token.typeToName(node.getType()), sourceName, node.getLineno(), \"\", 0);/g" src/com/google/javascript/jscomp/parsing/IRFactory.java
sed -i "s/public EvaluatorException runtimeError(String message, String sourceName, int line, String lineSource, int lineOffset) {/public com.google.javascript.jscomp.mozilla.rhino.EvaluatorException runtimeError(String message, String sourceName, int line, String lineSource, int lineOffset) {/g" src/com/google/javascript/jscomp/parsing/NullErrorReporter.java
sed -i '46s/com\.google\.javascript\.jscomp\.mozilla\.rhino\.//' src/com/google/javascript/jscomp/parsing/NullErrorReporter.java
sed -i 's/log("Compiled javascript written to " + this.outputFile.getAbsolutePath(), MSG_DEBUG);/log("Compiled javascript written to " + this.outputFile.getAbsolutePath(), Project.MSG_DEBUG);/g' src/com/google/javascript/jscomp/ant/CompileTask.java
sed -i 's/log("Created missing parent directory " + this.outputFile.getParentFile(), MSG_DEBUG);/log("Created missing parent directory " + this.outputFile.getParentFile(), Project.MSG_DEBUG);/g' src/com/google/javascript/jscomp/ant/CompileTask.java
sed -i "s/public EvaluatorException runtimeError(String message, String sourceName, int line, String lineSource, int lineOffset) {/public com.google.javascript.jscomp.mozilla.rhino.EvaluatorException runtimeError(String message, String sourceName, int line, String lineSource, int lineOffset) {/g" src/com/google/javascript/jscomp/RhinoErrorReporter.java 
sed -i '120s/com\.google\.javascript\.jscomp\.mozilla\.rhino\.//' src/com/google/javascript/jscomp/RhinoErrorReporter.java
sed -i 's/Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), UTF_8);/Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), Charsets.UTF_8);/g' src/com/google/javascript/jscomp/DefaultPassConfig.java
sed -i 's/protected String inputCharset = UTF_8.name();/protected String inputCharset = Charsets.UTF_8.name();/g' src/com/google/javascript/jscomp/SourceFile.java







exit 0

grep -rl --include="*.java" "com.google.javascript.jscomp.PassConfig." . | xargs sed -i 's/com.google.javascript.jscomp.PassConfig.//g'
grep -rl --include="*.java" "com.google.javascript.jscomp\." . | xargs sed -i 's/com.google.javascript.jscomp\.//g'
grep -rl --include="*.java" "import WarningLevel;" . | xargs sed -i 's/import WarningLevel;/import com.google.javascript.jscomp.WarningLevel;/g'
grep -rl --include="*.java" "import Result;" . | xargs sed -i 's/import Result;/import com.google.javascript.jscomp.Result;/g'
grep -rl --include="*.java" "import MessageFormatter;" . | xargs sed -i 's/import MessageFormatter;/import com.google.javascript.jscomp.MessageFormatter;/g'
grep -rl --include="*.java" "import SourceFile;" . | xargs sed -i 's/import SourceFile;/import com.google.javascript.jscomp.SourceFile;/g'
grep -rl --include="*.java" "import DiagnosticGroups;" . | xargs sed -i 's/import DiagnosticGroups;/import com.google.javascript.jscomp.DiagnosticGroups;/g'
grep -rl --include="*.java" "import CompilerOptions;" . | xargs sed -i 's/import CompilerOptions;/import com.google.javascript.jscomp.CompilerOptions;/g'
grep -rl --include="*.java" "import DiagnosticGroup;" . | xargs sed -i 's/import DiagnosticGroup;/import com.google.javascript.jscomp.DiagnosticGroup;/g'
grep -rl --include="*.java" "import Compiler;" . | xargs sed -i 's/import Compiler;/import com.google.javascript.jscomp.Compiler;/g'
grep -rl --include="*.java" "import CompilationLevel;" . | xargs sed -i 's/import CompilationLevel;/import com.google.javascript.jscomp.CompilationLevel;/g'
grep -rl --include="*.java" "import CommandLineRunner;" . | xargs sed -i 's/import CommandLineRunner;/import com.google.javascript.jscomp.CommandLineRunner;/g'
grep -rl --include="*.java" "import CheckLevel;" . | xargs sed -i 's/import CheckLevel;/import com.google.javascript.jscomp.CheckLevel;/g'
grep -rl --include="*.java" "import Scope.Var;" . | xargs sed -i 's/import Scope.Var;/import com.google.javascript.jscomp.Scope.Var;/g'
grep -rl --include="*.java" "import Scope;" . | xargs sed -i 's/import Scope;/import com.google.javascript.jscomp.Scope;/g'
grep -rl --include="*.java" "import ReferenceCollectingCallback.ReferenceCollection;" . | xargs sed -i 's/import ReferenceCollectingCallback.ReferenceCollection;/import com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection;/g'
grep -rl --include="*.java" "import ReferenceCollectingCallback;" . | xargs sed -i 's/import ReferenceCollectingCallback;/import com.google.javascript.jscomp.ReferenceCollectingCallback;/g'
grep -rl --include="*.java" "import CodingConvention;" . | xargs sed -i 's/import CodingConvention;/import com.google.javascript.jscomp.CodingConvention;/g'
grep -rl --include="*.java" "import ErrorManager;" . | xargs sed -i 's/import ErrorManager;/import com.google.javascript.jscomp.ErrorManager;/g'
grep -rl --include="*.java" "import JSError;" . | xargs sed -i 's/import JSError;/import com.google.javascript.jscomp.JSError;/g'
grep -rl --include="*.java" "import DiagnosticType;" . | xargs sed -i 's/import DiagnosticType;/import com.google.javascript.jscomp.DiagnosticType;/g'
grep -rl --include="*.java" "import NodeTraversal.AbstractPostOrderCallback;" . | xargs sed -i 's/import NodeTraversal.AbstractPostOrderCallback;/import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;/g'
grep -rl --include="*.java" "import ReferenceCollectingCallback.ReferenceMap;" . | xargs sed -i 's/import ReferenceCollectingCallback.ReferenceMap;/import com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap;/g'
grep -rl --include="*.java" "import ReferenceCollectingCallback.Reference;" . | xargs sed -i 's/import ReferenceCollectingCallback.Reference;/import com.google.javascript.jscomp.ReferenceCollectingCallback.Reference;/g'
grep -rl --include="*.java" "import ReferenceCollectingCallback.Behavior;" . | xargs sed -i 's/import ReferenceCollectingCallback.Behavior;/import com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior;/g'
grep -rl --include="*.java" "import JsMessage.IdGenerator;" . | xargs sed -i 's/import JsMessage.IdGenerator;/import com.google.javascript.jscomp.JsMessage.IdGenerator;/g'
grep -rl --include="*.java" "import NodeUtil.Visitor;" . | xargs sed -i 's/import NodeUtil.Visitor;/import com.google.javascript.jscomp.NodeUtil.Visitor;/g'
grep -rl --include="*.java" "import NodeTraversal.ScopedCallback;" . | xargs sed -i 's/import NodeTraversal.ScopedCallback;/import com.google.javascript.jscomp.NodeTraversal.ScopedCallback;/g'
grep -rl --include="*.java" "import NodeTraversal.AbstractShallowCallback;" . | xargs sed -i 's/import NodeTraversal.AbstractShallowCallback;/import com.google.javascript.jscomp.NodeTraversal.AbstractShallowCallback;/g'
grep -rl --include="*.java" "import MustBeReachingVariableDef.Definition;" . | xargs sed -i 's/import MustBeReachingVariableDef.Definition;/import com.google.javascript.jscomp.MustBeReachingVariableDef.Definition;/g'
grep -rl --include="*.java" "import ControlFlowGraph.Branch;" . | xargs sed -i 's/import ControlFlowGraph.Branch;/import com.google.javascript.jscomp.ControlFlowGraph.Branch;/g'
grep -rl --include="*.java" "import ControlFlowGraph.AbstractCfgNodeTraversalCallback;" . | xargs sed -i 's/import ControlFlowGraph.AbstractCfgNodeTraversalCallback;/import com.google.javascript.jscomp.ControlFlowGraph.AbstractCfgNodeTraversalCallback;/g'
grep -rl --include="*.java" "import LiveVariablesAnalysis.LiveVariableLattice;" . | xargs sed -i 's/import LiveVariablesAnalysis.LiveVariableLattice;/import com.google.javascript.jscomp.LiveVariablesAnalysis.LiveVariableLattice;/g'
grep -rl --include="*.java" "import DataFlowAnalysis.FlowState;" . | xargs sed -i 's/import DataFlowAnalysis.FlowState;/import com.google.javascript.jscomp.DataFlowAnalysis.FlowState;/g'
grep -rl --include="*.java" "import NodeTraversal.Callback;" . | xargs sed -i 's/import NodeTraversal.Callback;/import com.google.javascript.jscomp.NodeTraversal.Callback;/g'
grep -rl --include="*.java" "import GlobalNamespace.Ref;" . | xargs sed -i 's/import GlobalNamespace.Ref;/import com.google.javascript.jscomp.GlobalNamespace.Ref;/g'
grep -rl --include="*.java" "import GlobalNamespace.Name;" . | xargs sed -i 's/import GlobalNamespace.Name;/import com.google.javascript.jscomp.GlobalNamespace.Name;/g'
grep -rl --include="*.java" "import GlobalNamespace.Ref.Type;" . | xargs sed -i 's/import GlobalNamespace.Ref.Type;/import com.google.javascript.jscomp.GlobalNamespace.Ref.Type;/g'
grep -rl --include="*.java" "import DefinitionsRemover.Definition;" . | xargs sed -i 's/import DefinitionsRemover.Definition;/import com.google.javascript.jscomp.DefinitionsRemover.Definition;/g'
grep -rl --include="*.java" "import NodeTraversal.AbstractShallowStatementCallback;" . | xargs sed -i 's/import NodeTraversal.AbstractShallowStatementCallback;/import com.google.javascript.jscomp.NodeTraversal.AbstractShallowStatementCallback;/g'
grep -rl --include="*.java" "import CompilerOptions.DevMode;" . | xargs sed -i 's/import CompilerOptions.DevMode;/import com.google.javascript.jscomp.CompilerOptions.DevMode;/g'
grep -rl --include="*.java" "import CompilerOptions.LanguageMode;" . | xargs sed -i 's/import CompilerOptions.LanguageMode;/import com.google.javascript.jscomp.CompilerOptions.LanguageMode;/g'
grep -rl --include="*.java" "import parsing.ParserRunner;" . | xargs sed -i 's/import parsing.ParserRunner;/import com.google.javascript.jscomp.parsing.ParserRunner;/g'
grep -rl --include="*.java" "import static TypeCheck.ENUM_NOT_CONSTANT;" . | xargs sed -i 's/import static TypeCheck.ENUM_NOT_CONSTANT;/import static com.google.javascript.jscomp.TypeCheck.ENUM_NOT_CONSTANT;/g'
grep -rl --include="*.java" "import static TypeCheck.MULTIPLE_VAR_DEF;" . | xargs sed -i 's/import static TypeCheck.MULTIPLE_VAR_DEF;/import static com.google.javascript.jscomp.TypeCheck.MULTIPLE_VAR_DEF;/g'
grep -rl --include="*.java" "import CodingConvention.DelegateRelationship;" . | xargs sed -i 's/import CodingConvention.DelegateRelationship;/import com.google.javascript.jscomp.CodingConvention.DelegateRelationship;/g'
grep -rl --include="*.java" "import CodingConvention.ObjectLiteralCast;" . | xargs sed -i 's/import CodingConvention.ObjectLiteralCast;/import com.google.javascript.jscomp.CodingConvention.ObjectLiteralCast;/g'
grep -rl --include="*.java" "import CodingConvention.SubclassRelationship;" . | xargs sed -i 's/import CodingConvention.SubclassRelationship;/import com.google.javascript.jscomp.CodingConvention.SubclassRelationship;/g'
grep -rl --include="*.java" "import CodingConvention.SubclassType;" . | xargs sed -i 's/import CodingConvention.SubclassType;/import com.google.javascript.jscomp.CodingConvention.SubclassType;/g'
grep -rl --include="*.java" "import FunctionTypeBuilder.AstFunctionContents;" . | xargs sed -i 's/import FunctionTypeBuilder.AstFunctionContents;/import com.google.javascript.jscomp.FunctionTypeBuilder.AstFunctionContents;/g'
grep -rl --include="*.java" "import NodeTraversal.AbstractScopedCallback;" . | xargs sed -i 's/import NodeTraversal.AbstractScopedCallback;/import com.google.javascript.jscomp.NodeTraversal.AbstractScopedCallback;/g'
grep -rl --include="*.java" "import NodeTraversal.AbstractShallowStatementCallback;" . | xargs sed -i 's/import NodeTraversal.AbstractShallowStatementCallback;/import com.google.javascript.jscomp.NodeTraversal.AbstractShallowStatementCallback;/g'
grep -rl --include="*.java" "package parsing;" . | xargs sed -i 's/package parsing;/package com.google.javascript.jscomp.parsing;/g'
grep -rl --include="*.java" "package deps;" . | xargs sed -i 's/package deps;/package com.google.javascript.jscomp.deps;/g'
grep -rl --include="*.java" "deps\." . | xargs sed -i 's/deps\./com.google.javascript.jscomp.deps./g'
grep -rl --include="*.java" "parsing\." . | xargs sed -i 's/parsing\./com.google.javascript.jscomp.parsing./g'
grep -rl --include="*.java" "public class DefaultPassConfig extends {" . | xargs sed -i 's/public class DefaultPassConfig extends {/public class DefaultPassConfig extends PassConfig {/g'
grep -rl --include="*.java" "import SourceMap;" . | xargs sed -i 's/import SourceMap;/import com.google.javascript.jscomp.SourceMap;/g'
grep -rl --include="*.java" "import SourceMap.Format;" . | xargs sed -i 's/import SourceMap.Format;/import com.google.javascript.jscomp.SourceMap.Format;/g'
grep -rl --include="*.java" "class CleanupPasses extends {" . | xargs sed -i 's/class CleanupPasses extends {/class CleanupPasses extends PassConfig {/g'
grep -rl --include="*.java" "private passes = null;" . | xargs sed -i 's/private passes = null;/private PassConfig passes = null;/g'
#grep -rl --include="*.java" "getPassConfig() {" . | xargs sed -i 's/getPassConfig() {/PassConfig getPassConfig() {/g'
#grep -rl --include="*.java" "createPassConfigInternal() {" . | xargs sed -i 's/createPassConfigInternal() {/PassConfig createPassConfigInternal() {/g'
grep -rl --include="*.java" "public void setPassConfig(passes) {" . | xargs sed -i 's/public void setPassConfig(passes) {/public void setPassConfig(PassConfig passes) {/g'
grep -rl --include="*.java" "private void runHotSwap(com.google.javascript.rhino.Node originalRoot, com.google.javascript.rhino.Node js, passConfig) {" . | xargs sed -i 's/private void runHotSwap(com.google.javascript.rhino.Node originalRoot, com.google.javascript.rhino.Node js, passConfig) {/private void runHotSwap(com.google.javascript.rhino.Node originalRoot, com.google.javascript.rhino.Node js, PassConfig passConfig) {/g'
grep -rl --include="*.java" "private getCleanupPassConfig() {" . | xargs sed -i 's/private getCleanupPassConfig() {/private PassConfig getCleanupPassConfig() {/g'
grep -rl --include="*.java" "final getBasePassConfig() {" . | xargs sed -i 's/final getBasePassConfig() {/final PassConfig getBasePassConfig() {/g'
grep -rl --include="*.java" "static class PassConfigDelegate extends {" . | xargs sed -i 's/static class PassConfigDelegate extends {/static class PassConfigDelegate extends PassConfig {/g'
grep -rl --include="*.java" "private final delegate;" . | xargs sed -i 's/private final delegate;/private final PassConfig delegate;/g'
grep -rl --include="*.java" "PassConfigDelegate(delegate) {" . | xargs sed -i 's/PassConfigDelegate(delegate) {/PassConfigDelegate(PassConfig delegate) {/g'
grep -rl --include="*.java" "package ant;" . | xargs sed -i 's/package ant;/package com.google.javascript.jscomp.ant;/g'
grep -rl --include="*.java" --exclude="DiagnosticType.java" "DiagnosticType" . | xargs sed -i 's/DiagnosticType/com.google.javascript.jscomp.DiagnosticType/g'
grep -rl --include="*.java" "package graph;" . | xargs sed -i 's/package graph;/package com.google.javascript.jscomp.graph;/g'
grep -rl --include="*.java" "import graph" . | xargs sed -i 's/import graph/import com.google.javascript.jscomp.graph/g'
grep -rl --include="*.java" "private graph\." . | xargs sed -i 's/private graph\./private com.google.javascript.jscomp.graph./g'
grep -rl --include="*.java" "public static java.lang.String toDot(graph.GraphvizGraph graph) {" . | xargs sed -i 's/public static java.lang.String toDot(graph.GraphvizGraph graph) {/public static java.lang.String toDot(com.google.javascript.jscomp.graph.GraphvizGraph graph) {/g'
grep -rl --include="*.java" "graph.UnionFind<T>" . | xargs sed -i 's/graph.UnionFind<T>/com.google.javascript.jscomp.graph.UnionFind<T>/g'
grep -rl --include="*.java" "extends graph." . | xargs sed -i 's/extends graph./extends com.google.javascript.jscomp.graph./g'
grep -rl --include="*.java" "graph.DiGraph" . | xargs sed -i 's/graph.DiGraph/com.google.javascript.jscomp.graph.DiGraph/g'
grep -rl --include="*.java" --exclude="ErrorManager.java" " ErrorManager" . | xargs sed -i 's/ ErrorManager/ com.google.javascript.jscomp.ErrorManager/g'
grep -rl --include="*.java" --exclude="SourceFile.java" "SourceFile\." . | xargs sed -i 's/SourceFile\./com.google.javascript.jscomp.SourceFile./g'
grep -rl --include="*.java" --exclude="CheckLevel.java" "CheckLevel\." . | xargs sed -i 's/CheckLevel\./com.google.javascript.jscomp.CheckLevel./g'
grep -rl --include="*.java" "public void setLevel(CheckLevel level) {" . | xargs sed -i 's/public void setLevel(CheckLevel level) {/public void setLevel(com.google.javascript.jscomp.CheckLevel level) {/g'
grep -rl --include="*.java" "public CheckLevel" . | xargs sed -i 's/public CheckLevel/public com.google.javascript.jscomp.CheckLevel/g'
grep -rl --include="*.java" "public void println(CheckLevel level, JSError error) {" . | xargs sed -i 's/public void println(CheckLevel level, JSError error) {/public void println(com.google.javascript.jscomp.CheckLevel level, com.google.javascript.jscomp.JSError error) {/g'
grep -rl --include="*.java" "import BasicErrorManager;" . | xargs sed -i 's/import BasicErrorManager;/import com.google.javascript.jscomp.BasicErrorManager;/g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'
#grep -rl --include="*.java" "" . | xargs sed -i 's///g'

grep -rl --include="*.java" "private static class StringCharIterator implements CharIterator {" . | xargs sed -i 's/private static class StringCharIterator implements CharIterator {/private static class StringCharIterator implements com.google.debugging.sourcemap.Base64VLQ.CharIterator {/g'
grep -rl --include="*.java" "class ConsumerEntryVisitor implements EntryVisitor {" . | xargs sed -i 's/class ConsumerEntryVisitor implements EntryVisitor {/class ConsumerEntryVisitor implements com.google.debugging.sourcemap.SourceMapConsumerV3.EntryVisitor {/g'
grep -rl --include="*.java" "class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {" . | xargs sed -i 's/class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {/class ReferenceCollectingCallback implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {/g'
grep -rl --include="*.java" "class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {" . | xargs sed -i 's/class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {/class ReferenceCollectingCallback implements ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<com.google.javascript.jscomp.Scope.Var, Reference> {/g'
grep -rl --include="*.java" "class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<Var, Var> {" . | xargs sed -i 's/class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<Var, Var> {/class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.Scope.Var> {/g'
grep -rl --include="*.java" "class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<Var, Var> {" . | xargs sed -i 's/class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<Var, Var> {/class MemoizedScopeCreator implements ScopeCreator , StaticSymbolTable<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.Scope.Var> {/g'
grep -rl --include="*.java" "public LanguageMode languageMode() {" . | xargs sed -i 's/public LanguageMode languageMode() {/public com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode() {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot) {/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot) {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot) {/void updateGlobalVarReferences(Map<Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node collectionRoot) {/g'
grep -rl --include="*.java" "abstract void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot);" . | xargs sed -i 's/abstract void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot);/abstract void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot);/g'
grep -rl --include="*.java" "abstract void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot);" . | xargs sed -i 's/abstract void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot);/abstract void updateGlobalVarReferences(Map<Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node collectionRoot);/g'
grep -rl --include="*.java" "private TweakProcessing tweakProcessing = TweakProcessing.OFF;" . | xargs sed -i 's/private TweakProcessing tweakProcessing = TweakProcessing.OFF;/private com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing = com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF;/g'
grep -rl --include="*.java" "CommandLineConfig setTweakProcessing(TweakProcessing tweakProcessing) {" . | xargs sed -i 's/CommandLineConfig setTweakProcessing(TweakProcessing tweakProcessing) {/CommandLineConfig setTweakProcessing(com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing) {/g'
grep -rl --include="*.java" "class InferJSDocInfo extends AbstractPostOrderCallback implements HotSwapCompilerPass {" . | xargs sed -i 's/class InferJSDocInfo extends AbstractPostOrderCallback implements HotSwapCompilerPass {/class InferJSDocInfo extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements HotSwapCompilerPass {/g'
grep -rl --include="*.java" "public RecordType createRecordType(Map<String, RecordProperty> properties) {" . | xargs sed -i 's/public RecordType createRecordType(Map<String, RecordProperty> properties) {/public RecordType createRecordType(Map<String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {/g'
grep -rl --include="*.java" "Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, Var var, String variableName, JSType newType) {" . | xargs sed -i 's/Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, Var var, String variableName, JSType newType) {/com.google.javascript.jscomp.Scope.Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, com.google.javascript.jscomp.Scope.Var var, String variableName, JSType newType) {/g'
grep -rl --include="*.java" "Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, Var var, String variableName, JSType newType) {" . | xargs sed -i 's/Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, Var var, String variableName, JSType newType) {/com.google.javascript.jscomp.Scope.Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, com.google.javascript.jscomp.Scope.Var var, String variableName, JSType newType) {/g'
grep -rl --include="*.java" "PerformanceTracker(Node jsRoot, TracerMode mode) {" . | xargs sed -i 's/PerformanceTracker(Node jsRoot, TracerMode mode) {/PerformanceTracker(Node jsRoot, com.google.javascript.jscomp.CompilerOptions.TracerMode mode) {/g'
grep -rl --include="*.java" "private Map<String, ReferenceCollection> refMap = null;" . | xargs sed -i 's/private Map<String, ReferenceCollection> refMap = null;/private Map<String, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMap = null;/g'
grep -rl --include="*.java" "public ReferenceCollection getReferences(Var var) {" . | xargs sed -i 's/public ReferenceCollection getReferences(Var var) {/public ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "public ReferenceCollection getReferences(Var var) {" . | xargs sed -i 's/public ReferenceCollection getReferences(Var var) {/public com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection getReferences(Var var) {/g'
grep -rl --include="*.java" "private void resetGlobalVarReferences(Map<Var, ReferenceCollection> globalRefMap) {" . | xargs sed -i 's/private void resetGlobalVarReferences(Map<Var, ReferenceCollection> globalRefMap) {/private void resetGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> globalRefMap) {/g'
grep -rl --include="*.java" "private void resetGlobalVarReferences(Map<Var, ReferenceCollection> globalRefMap) {" . | xargs sed -i 's/private void resetGlobalVarReferences(Map<Var, ReferenceCollection> globalRefMap) {/private void resetGlobalVarReferences(Map<Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> globalRefMap) {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node root) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node root) {/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node root) {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node root) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node root) {/void updateGlobalVarReferences(Map<Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node root) {/g'
grep -rl --include="*.java" "private void replaceReferences(String varName, InputId inputId, ReferenceCollection newSourceCollection) {" . | xargs sed -i 's/private void replaceReferences(String varName, InputId inputId, ReferenceCollection newSourceCollection) {/private void replaceReferences(String varName, InputId inputId, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection newSourceCollection) {/g'
grep -rl --include="*.java" "private SourceRefRange findSourceRefRange(List<Reference> refList, InputId inputId) {" . | xargs sed -i 's/private SourceRefRange findSourceRefRange(List<Reference> refList, InputId inputId) {/private SourceRefRange findSourceRefRange(List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refList, InputId inputId) {/g'
grep -rl --include="*.java" "private final Map<Var, ReferenceCollection> referenceMap = Maps.newHashMap();" . | xargs sed -i 's/private final Map<Var, ReferenceCollection> referenceMap = Maps.newHashMap();/private final Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> referenceMap = Maps.newHashMap();/g'
grep -rl --include="*.java" "private final Predicate<Var> varFilter;" . | xargs sed -i 's/private final Predicate<Var> varFilter;/private final Predicate<com.google.javascript.jscomp.Scope.Var> varFilter;/g'
grep -rl --include="*.java" "ReferenceCollectingCallback(AbstractCompiler compiler, Behavior behavior, Predicate<Var> varFilter) {" . | xargs sed -i 's/ReferenceCollectingCallback(AbstractCompiler compiler, Behavior behavior, Predicate<Var> varFilter) {/ReferenceCollectingCallback(AbstractCompiler compiler, Behavior behavior, Predicate<com.google.javascript.jscomp.Scope.Var> varFilter) {/g'
grep -rl --include="*.java" "public Iterable<Var> getAllSymbols() {" . | xargs sed -i 's/public Iterable<Var> getAllSymbols() {/public Iterable<com.google.javascript.jscomp.Scope.Var> getAllSymbols() {/g'
grep -rl --include="*.java" "public Scope getScope(Var var) {" . | xargs sed -i 's/public Scope getScope(Var var) {/public Scope getScope(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "public ReferenceCollection getReferences(Var v) {" . | xargs sed -i 's/public ReferenceCollection getReferences(Var v) {/public ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var v) {/g'
grep -rl --include="*.java" "private void addReference(Var v, Reference reference) {" . | xargs sed -i 's/private void addReference(Var v, Reference reference) {/private void addReference(com.google.javascript.jscomp.Scope.Var v, Reference reference) {/g'
grep -rl --include="*.java" "ReferenceCollection getReferences(Var var);" . | xargs sed -i 's/ReferenceCollection getReferences(Var var);/ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var var);/g'
grep -rl --include="*.java" "public Iterable<Var> getReferences(Var var) {" . | xargs sed -i 's/public Iterable<Var> getReferences(Var var) {/public Iterable<com.google.javascript.jscomp.Scope.Var> getReferences(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "public Iterable<Var> getReferences(Var var) {" . | xargs sed -i 's/public Iterable<Var> getReferences(Var var) {/public Iterable<com.google.javascript.jscomp.Scope.Var> getReferences(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "public Scope getScope(Var var) {" . | xargs sed -i 's/public Scope getScope(Var var) {/public Scope getScope(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "public Iterable<Var> getAllSymbols() {" . | xargs sed -i 's/public Iterable<Var> getAllSymbols() {/public Iterable<com.google.javascript.jscomp.Scope.Var> getAllSymbols() {/g'
grep -rl --include="*.java" "private static HotSwapCompilerPass combineChecks(AbstractCompiler compiler, List<Callback> callbacks) {" . | xargs sed -i 's/private static HotSwapCompilerPass combineChecks(AbstractCompiler compiler, List<Callback> callbacks) {/private static HotSwapCompilerPass combineChecks(AbstractCompiler compiler, List<com.google.javascript.jscomp.NodeTraversal.Callback> callbacks) {/g'
grep -rl --include="*.java" "private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;" . | xargs sed -i 's/private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;/private final Map<String, com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec> assertionFunctionsMap;/g'
grep -rl --include="*.java" "RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {" . | xargs sed -i 's/RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {/RecordType(JSTypeRegistry registry, Map<String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties) {/g'
grep -rl --include="*.java" "RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties, boolean declared) {" . | xargs sed -i 's/RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties, boolean declared) {/RecordType(JSTypeRegistry registry, Map<String, com.google.javascript.rhino.jstype.RecordTypeBuilder.RecordProperty> properties, boolean declared) {/g'
grep -rl --include="*.java" "private final List<Reference> refList;" . | xargs sed -i 's/private final List<Reference> refList;/private final List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refList;/g'
grep -rl --include="*.java" "SourceRefRange(List<Reference> refList, int lastBefore, int firstAfter) {" . | xargs sed -i 's/SourceRefRange(List<Reference> refList, int lastBefore, int firstAfter) {/SourceRefRange(List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refList, int lastBefore, int firstAfter) {/g'
grep -rl --include="*.java" "List<Reference> refsBefore() {" . | xargs sed -i 's/List<Reference> refsBefore() {/List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refsBefore() {/g'
grep -rl --include="*.java" "List<Reference> refsAfter() {" . | xargs sed -i 's/List<Reference> refsAfter() {/List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference> refsAfter() {/g'
grep -rl --include="*.java" "public Var getSymbol() {" . | xargs sed -i 's/public Var getSymbol() {/public com.google.javascript.jscomp.Scope.Var getSymbol() {/g'
grep -rl --include="*.java" "private final Map<Node, ConcreteFunctionType> functionFromDeclaration = Maps.newHashMap();" . | xargs sed -i 's/private final Map<Node, ConcreteFunctionType> functionFromDeclaration = Maps.newHashMap();/private final Map<Node, com.google.javascript.jscomp.ConcreteType.ConcreteFunctionType> functionFromDeclaration = Maps.newHashMap();/g'
grep -rl --include="*.java" "private final Map<FunctionType, ConcreteFunctionType> functionFromJSType = Maps.newIdentityHashMap();" . | xargs sed -i 's/private final Map<FunctionType, ConcreteFunctionType> functionFromJSType = Maps.newIdentityHashMap();/private final Map<FunctionType, com.google.javascript.jscomp.ConcreteType.ConcreteFunctionType> functionFromJSType = Maps.newIdentityHashMap();/g'
grep -rl --include="*.java" "private final Map<ObjectType, ConcreteInstanceType> instanceFromJSType = Maps.newHashMap();" . | xargs sed -i 's/private final Map<ObjectType, ConcreteInstanceType> instanceFromJSType = Maps.newHashMap();/private final Map<ObjectType, com.google.javascript.jscomp.ConcreteType.ConcreteInstanceType> instanceFromJSType = Maps.newHashMap();/g'
grep -rl --include="*.java" "public ConcreteFunctionType createConcreteFunction(Node decl, StaticScope<ConcreteType> parent) {" . | xargs sed -i 's/public ConcreteFunctionType createConcreteFunction(Node decl, StaticScope<ConcreteType> parent) {/public com.google.javascript.jscomp.ConcreteType.ConcreteFunctionType createConcreteFunction(Node decl, StaticScope<ConcreteType> parent) {/g'
grep -rl --include="*.java" "public ConcreteInstanceType createConcreteInstance(ObjectType instanceType) {" . | xargs sed -i 's/public ConcreteInstanceType createConcreteInstance(ObjectType instanceType) {/public com.google.javascript.jscomp.ConcreteType.ConcreteInstanceType createConcreteInstance(ObjectType instanceType) {/g'
grep -rl --include="*.java" "ConcreteFunctionType getConcreteFunction(Node decl) {" . | xargs sed -i 's/ConcreteFunctionType getConcreteFunction(Node decl) {/com.google.javascript.jscomp.ConcreteType.ConcreteFunctionType getConcreteFunction(Node decl) {/g'
grep -rl --include="*.java" "public ConcreteFunctionType getConcreteFunction(FunctionType functionType) {" . | xargs sed -i 's/public ConcreteFunctionType getConcreteFunction(FunctionType functionType) {/public com.google.javascript.jscomp.ConcreteType.ConcreteFunctionType getConcreteFunction(FunctionType functionType) {/g'
grep -rl --include="*.java" "public ConcreteInstanceType getConcreteInstance(ObjectType instanceType) {" . | xargs sed -i 's/public ConcreteInstanceType getConcreteInstance(ObjectType instanceType) {/public com.google.javascript.jscomp.ConcreteType.ConcreteInstanceType getConcreteInstance(ObjectType instanceType) {/g'
grep -rl --include="*.java" "private Set<ConcreteType> getSubTypes(ConcreteInstanceType type) {" . | xargs sed -i 's/private Set<ConcreteType> getSubTypes(ConcreteInstanceType type) {/private Set<ConcreteType> getSubTypes(com.google.javascript.jscomp.ConcreteType.ConcreteInstanceType type) {/g'
grep -rl --include="*.java" "private void moveMethods(Collection<NameInfo> allNameInfo) {" . | xargs sed -i 's/private void moveMethods(Collection<NameInfo> allNameInfo) {/private void moveMethods(Collection<com.google.javascript.jscomp.AnalyzePrototypeProperties.NameInfo> allNameInfo) {/g'
grep -rl --include="*.java" "private static class FunctionListExtractor extends AbstractPostOrderCallback {" . | xargs sed -i 's/private static class FunctionListExtractor extends AbstractPostOrderCallback {/private static class FunctionListExtractor extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "Var getRootVar();" . | xargs sed -i 's/Var getRootVar();/com.google.javascript.jscomp.Scope.Var getRootVar();/g'
grep -rl --include="*.java" "private class GetAliasableNames extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class GetAliasableNames extends AbstractPostOrderCallback {/private class GetAliasableNames extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private final class PropertyGatherer extends AbstractPostOrderCallback {" . | xargs sed -i 's/private final class PropertyGatherer extends AbstractPostOrderCallback {/private final class PropertyGatherer extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private final class GlobalGatherer extends AbstractPostOrderCallback {" . | xargs sed -i 's/private final class GlobalGatherer extends AbstractPostOrderCallback {/private final class GlobalGatherer extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private class FindAliasableNodes extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class FindAliasableNodes extends AbstractPostOrderCallback {/private class FindAliasableNodes extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "class AliasStrings extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/class AliasStrings extends AbstractPostOrderCallback implements CompilerPass {/class AliasStrings extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "private class ProcessExterns extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class ProcessExterns extends AbstractPostOrderCallback {/private class ProcessExterns extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private class ProcessProperties extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class ProcessProperties extends AbstractPostOrderCallback {/private class ProcessProperties extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private NameInfo getInfo(Name symbol) {" . | xargs sed -i 's/private NameInfo getInfo(Name symbol) {/private NameInfo getInfo(com.google.javascript.jscomp.NameReferenceGraph.Name symbol) {/g'
grep -rl --include="*.java" "public Collection<Definition> getDefinitionsReferencedAt(Node useSite) {" . | xargs sed -i 's/public Collection<Definition> getDefinitionsReferencedAt(Node useSite) {/public Collection<com.google.javascript.jscomp.DefinitionsRemover.Definition> getDefinitionsReferencedAt(Node useSite) {/g'
grep -rl --include="*.java" "Collection<Definition> getDefinitionsReferencedAt(Node useSite);" . | xargs sed -i 's/Collection<Definition> getDefinitionsReferencedAt(Node useSite);/Collection<com.google.javascript.jscomp.DefinitionsRemover.Definition> getDefinitionsReferencedAt(Node useSite);/g'
grep -rl --include="*.java" "private List<Definition> declarations = Lists.newLinkedList();" . | xargs sed -i 's/private List<Definition> declarations = Lists.newLinkedList();/private List<com.google.javascript.jscomp.DefinitionsRemover.Definition> declarations = Lists.newLinkedList();/g'
grep -rl --include="*.java" "public List<Definition> getDeclarations() {" . | xargs sed -i 's/public List<Definition> getDeclarations() {/public List<com.google.javascript.jscomp.DefinitionsRemover.Definition> getDeclarations() {/g'
grep -rl --include="*.java" "private class PropagateReferences implements EdgeCallback<Name, Reference> {" . | xargs sed -i 's/private class PropagateReferences implements EdgeCallback<Name, Reference> {/private class PropagateReferences implements EdgeCallback<com.google.javascript.jscomp.NameReferenceGraph.Name, Reference> {/g'
grep -rl --include="*.java" "private class PropagateReferences implements EdgeCallback<Name, Reference> {" . | xargs sed -i 's/private class PropagateReferences implements EdgeCallback<Name, Reference> {/private class PropagateReferences implements EdgeCallback<Name, com.google.javascript.jscomp.NameReferenceGraph.Reference> {/g'
grep -rl --include="*.java" "public boolean traverseEdge(Name start, Reference edge, Name dest) {" . | xargs sed -i 's/public boolean traverseEdge(Name start, Reference edge, Name dest) {/public boolean traverseEdge(com.google.javascript.jscomp.NameReferenceGraph.Name start, Reference edge, com.google.javascript.jscomp.NameReferenceGraph.Name dest) {/g'
grep -rl --include="*.java" "public boolean traverseEdge(Name start, Reference edge, Name dest) {" . | xargs sed -i 's/public boolean traverseEdge(Name start, Reference edge, Name dest) {/public boolean traverseEdge(Name start, com.google.javascript.jscomp.NameReferenceGraph.Reference edge, Name dest) {/g'
grep -rl --include="*.java" "public boolean traverseEdge(Name start, Reference edge, Name dest) {" . | xargs sed -i 's/public boolean traverseEdge(Name start, Reference edge, Name dest) {/public boolean traverseEdge(com.google.javascript.jscomp.NameReferenceGraph.Name start, Reference edge, com.google.javascript.jscomp.NameReferenceGraph.Name dest) {/g'
grep -rl --include="*.java" "private boolean processGlobalFunctionDeclaration(NodeTraversal t, Node nameNode, Var v) {" . | xargs sed -i 's/private boolean processGlobalFunctionDeclaration(NodeTraversal t, Node nameNode, Var v) {/private boolean processGlobalFunctionDeclaration(NodeTraversal t, Node nameNode, com.google.javascript.jscomp.Scope.Var v) {/g'
grep -rl --include="*.java" "private Var maybeGetVar(NodeTraversal t, Node maybeName) {" . | xargs sed -i 's/private Var maybeGetVar(NodeTraversal t, Node maybeName) {/private com.google.javascript.jscomp.Scope.Var maybeGetVar(NodeTraversal t, Node maybeName) {/g'
grep -rl --include="*.java" "class ReferenceCollectingCallback implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {" . | xargs sed -i 's/class ReferenceCollectingCallback implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<Var, Reference> {/class ReferenceCollectingCallback implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback , HotSwapCompilerPass , StaticSymbolTable<com.google.javascript.jscomp.Scope.Var, Reference> {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot) {/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node collectionRoot) {/g'
grep -rl --include="*.java" "abstract void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot);" . | xargs sed -i 's/abstract void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node collectionRoot);/abstract void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node collectionRoot);/g'
grep -rl --include="*.java" "public ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var var) {" . | xargs sed -i 's/public ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var var) {/public com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection getReferences(com.google.javascript.jscomp.Scope.Var var) {/g'
grep -rl --include="*.java" "private void resetGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> globalRefMap) {" . | xargs sed -i 's/private void resetGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> globalRefMap) {/private void resetGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> globalRefMap) {/g'
grep -rl --include="*.java" "void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node root) {" . | xargs sed -i 's/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, ReferenceCollection> refMapPatch, Node root) {/void updateGlobalVarReferences(Map<com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection> refMapPatch, Node root) {/g'
grep -rl --include="*.java" "private class PropagateReferences implements EdgeCallback<com.google.javascript.jscomp.NameReferenceGraph.Name, Reference> {" . | xargs sed -i 's/private class PropagateReferences implements EdgeCallback<com.google.javascript.jscomp.NameReferenceGraph.Name, Reference> {/private class PropagateReferences implements EdgeCallback<com.google.javascript.jscomp.NameReferenceGraph.Name, com.google.javascript.jscomp.NameReferenceGraph.Reference> {/g'
grep -rl --include="*.java" "public boolean traverseEdge(com.google.javascript.jscomp.NameReferenceGraph.Name start, Reference edge, com.google.javascript.jscomp.NameReferenceGraph.Name dest) {" . | xargs sed -i 's/public boolean traverseEdge(com.google.javascript.jscomp.NameReferenceGraph.Name start, Reference edge, com.google.javascript.jscomp.NameReferenceGraph.Name dest) {/public boolean traverseEdge(com.google.javascript.jscomp.NameReferenceGraph.Name start, com.google.javascript.jscomp.NameReferenceGraph.Reference edge, com.google.javascript.jscomp.NameReferenceGraph.Name dest) {/g'
grep -rl --include="*.java" "private class ProcessExternProperties extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class ProcessExternProperties extends AbstractPostOrderCallback {/private class ProcessExternProperties extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private final Var var;" . | xargs sed -i 's/private final Var var;/private final com.google.javascript.jscomp.Scope.Var var;/g'
grep -rl --include="*.java" "GlobalFunction(Node nameNode, Var var, JSModule module) {" . | xargs sed -i 's/GlobalFunction(Node nameNode, Var var, JSModule module) {/GlobalFunction(Node nameNode, com.google.javascript.jscomp.Scope.Var var, JSModule module) {/g'
grep -rl --include="*.java" "public Var getRootVar() {" . | xargs sed -i 's/public Var getRootVar() {/public com.google.javascript.jscomp.Scope.Var getRootVar() {/g'
grep -rl --include="*.java" "private final Var rootVar;" . | xargs sed -i 's/private final Var rootVar;/private final com.google.javascript.jscomp.Scope.Var rootVar;/g'
grep -rl --include="*.java" "AssignmentProperty(Node node, Var rootVar, JSModule module) {" . | xargs sed -i 's/AssignmentProperty(Node node, Var rootVar, JSModule module) {/AssignmentProperty(Node node, com.google.javascript.jscomp.Scope.Var rootVar, JSModule module) {/g'
grep -rl --include="*.java" "public Var getRootVar() {" . | xargs sed -i 's/public Var getRootVar() {/public com.google.javascript.jscomp.Scope.Var getRootVar() {/g'
grep -rl --include="*.java" "private final Var rootVar;" . | xargs sed -i 's/private final Var rootVar;/private final com.google.javascript.jscomp.Scope.Var rootVar;/g'
grep -rl --include="*.java" "LiteralProperty(Node key, Node value, Node map, Node assign, Var rootVar, JSModule module) {" . | xargs sed -i 's/LiteralProperty(Node key, Node value, Node map, Node assign, Var rootVar, JSModule module) {/LiteralProperty(Node key, Node value, Node map, Node assign, com.google.javascript.jscomp.Scope.Var rootVar, JSModule module) {/g'
grep -rl --include="*.java" "public Var getRootVar() {" . | xargs sed -i 's/public Var getRootVar() {/public com.google.javascript.jscomp.Scope.Var getRootVar() {/g'
grep -rl --include="*.java" "class AngularPass extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/class AngularPass extends AbstractPostOrderCallback implements CompilerPass {/class AngularPass extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "class AnonymousFunctionNamingCallback extends AbstractPostOrderCallback {" . | xargs sed -i 's/class AnonymousFunctionNamingCallback extends AbstractPostOrderCallback {/class AnonymousFunctionNamingCallback extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private void updateFunctionForName(Function function, Name name) {" . | xargs sed -i 's/private void updateFunctionForName(Function function, Name name) {/private void updateFunctionForName(Function function, com.google.javascript.jscomp.NameReferenceGraph.Name name) {/g'
grep -rl --include="*.java" "public DiGraph<Function, Callsite> getForwardDirectedGraph() {" . | xargs sed -i 's/public DiGraph<Function, Callsite> getForwardDirectedGraph() {/public com.google.javascript.jscomp.graph.DiGraph<Function, Callsite> getForwardDirectedGraph() {/g'
grep -rl --include="*.java" "public DiGraph<Function, Callsite> getBackwardDirectedGraph() {" . | xargs sed -i 's/public DiGraph<Function, Callsite> getBackwardDirectedGraph() {/public com.google.javascript.jscomp.graph.DiGraph<Function, Callsite> getBackwardDirectedGraph() {/g'
grep -rl --include="*.java" "private static void digraphConnect(DiGraph<Function, Callsite> digraph, Function caller, Callsite callsite, Function callee, boolean forward) {" . | xargs sed -i 's/private static void digraphConnect(DiGraph<Function, Callsite> digraph, Function caller, Callsite callsite, Function callee, boolean forward) {/private static void digraphConnect(com.google.javascript.jscomp.graph.DiGraph<Function, Callsite> digraph, Function caller, Callsite callsite, Function callee, boolean forward) {/g'
grep -rl --include="*.java" "private DiGraph<Function, Callsite> constructDirectedGraph(boolean forward) {" . | xargs sed -i 's/private DiGraph<Function, Callsite> constructDirectedGraph(boolean forward) {/private com.google.javascript.jscomp.graph.DiGraph<Function, Callsite> constructDirectedGraph(boolean forward) {/g'
grep -rl --include="*.java" "private class GatherFunctions implements ScopedCallback {" . | xargs sed -i 's/private class GatherFunctions implements ScopedCallback {/private class GatherFunctions implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback {/g'
grep -rl --include="*.java" "private final Multimap<String, Definition> nameDefinitionMultimap;" . | xargs sed -i 's/private final Multimap<String, Definition> nameDefinitionMultimap;/private final Multimap<String, com.google.javascript.jscomp.DefinitionsRemover.Definition> nameDefinitionMultimap;/g'
grep -rl --include="*.java" "Collection<UseSite> getUseSites(Definition definition) {" . | xargs sed -i 's/Collection<UseSite> getUseSites(Definition definition) {/Collection<UseSite> getUseSites(com.google.javascript.jscomp.DefinitionsRemover.Definition definition) {/g'
grep -rl --include="*.java" "boolean canModifyDefinition(Definition definition) {" . | xargs sed -i 's/boolean canModifyDefinition(Definition definition) {/boolean canModifyDefinition(com.google.javascript.jscomp.DefinitionsRemover.Definition definition) {/g'
grep -rl --include="*.java" "private boolean isExported(Definition definition) {" . | xargs sed -i 's/private boolean isExported(Definition definition) {/private boolean isExported(com.google.javascript.jscomp.DefinitionsRemover.Definition definition) {/g'
grep -rl --include="*.java" "final Definition definition;" . | xargs sed -i 's/final Definition definition;/final com.google.javascript.jscomp.DefinitionsRemover.Definition definition;/g'
grep -rl --include="*.java" "DefinitionSite(Node node, Definition definition, JSModule module, boolean inGlobalScope, boolean inExterns) {" . | xargs sed -i 's/DefinitionSite(Node node, Definition definition, JSModule module, boolean inGlobalScope, boolean inExterns) {/DefinitionSite(Node node, com.google.javascript.jscomp.DefinitionsRemover.Definition definition, JSModule module, boolean inGlobalScope, boolean inExterns) {/g'
grep -rl --include="*.java" "private class GatherCallSites extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class GatherCallSites extends AbstractPostOrderCallback {/private class GatherCallSites extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "class CheckAccessControls implements ScopedCallback , HotSwapCompilerPass {" . | xargs sed -i 's/class CheckAccessControls implements ScopedCallback , HotSwapCompilerPass {/class CheckAccessControls implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback , HotSwapCompilerPass {/g'
grep -rl --include="*.java" "class CheckDebuggerStatement extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/class CheckDebuggerStatement extends AbstractPostOrderCallback implements CompilerPass {/class CheckDebuggerStatement extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "final class CheckGlobalThis implements Callback {" . | xargs sed -i 's/final class CheckGlobalThis implements Callback {/final class CheckGlobalThis implements com.google.javascript.jscomp.NodeTraversal.Callback {/g'
grep -rl --include="*.java" "class CheckMissingGetCssName extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/class CheckMissingGetCssName extends AbstractPostOrderCallback implements CompilerPass {/class CheckMissingGetCssName extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "class CheckMissingReturn implements ScopedCallback {" . | xargs sed -i 's/class CheckMissingReturn implements ScopedCallback {/class CheckMissingReturn implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback {/g'
grep -rl --include="*.java" "private static final Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>> GOES_THROUGH_TRUE_CONDITION_PREDICATE = new Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>>() {" . | xargs sed -i 's/private static final Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>> GOES_THROUGH_TRUE_CONDITION_PREDICATE = new Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>>() {/private static final Predicate<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<Node, ControlFlowGraph.Branch>> GOES_THROUGH_TRUE_CONDITION_PREDICATE = new Predicate<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<Node, ControlFlowGraph.Branch>>() {/g'
grep -rl --include="*.java" "private final Predicate<DiGraphEdge<N, E>> edgePredicate;" . | xargs sed -i 's/private final Predicate<DiGraphEdge<N, E>> edgePredicate;/private final Predicate<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<N, E>> edgePredicate;/g'
grep -rl --include="*.java" "private final DiGraph<N, E> graph;" . | xargs sed -i 's/private final DiGraph<N, E> graph;/private final com.google.javascript.jscomp.graph.DiGraph<N, E> graph;/g'
grep -rl --include="*.java" "private final DiGraphNode<N, E> start;" . | xargs sed -i 's/private final DiGraphNode<N, E> start;/private final com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> start;/g'
grep -rl --include="*.java" "private final DiGraphNode<N, E> end;" . | xargs sed -i 's/private final DiGraphNode<N, E> end;/private final com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> end;/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/CheckPathsBetweenNodes(com.google.javascript.jscomp.graph.DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/CheckPathsBetweenNodes(com.google.javascript.jscomp.graph.DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/g'
grep -rl --include="*.java" "CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {" . | xargs sed -i 's/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<DiGraphEdge<N, E>> edgePredicate) {/CheckPathsBetweenNodes(DiGraph<N, E> graph, DiGraphNode<N, E> a, DiGraphNode<N, E> b, Predicate<N> nodePredicate, Predicate<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<N, E>> edgePredicate) {/g'
grep -rl --include="*.java" "private void discoverBackEdges(DiGraphNode<N, E> u) {" . | xargs sed -i 's/private void discoverBackEdges(DiGraphNode<N, E> u) {/private void discoverBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> u) {/g'
grep -rl --include="*.java" "private boolean ignoreEdge(DiGraphEdge<N, E> e) {" . | xargs sed -i 's/private boolean ignoreEdge(DiGraphEdge<N, E> e) {/private boolean ignoreEdge(com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<N, E> e) {/g'
grep -rl --include="*.java" "private boolean checkAllPathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {" . | xargs sed -i 's/private boolean checkAllPathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {/private boolean checkAllPathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b) {/g'
grep -rl --include="*.java" "private boolean checkAllPathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {" . | xargs sed -i 's/private boolean checkAllPathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {/private boolean checkAllPathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b) {/g'
grep -rl --include="*.java" "private boolean checkSomePathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {" . | xargs sed -i 's/private boolean checkSomePathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {/private boolean checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b) {/g'
grep -rl --include="*.java" "private boolean checkSomePathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {" . | xargs sed -i 's/private boolean checkSomePathsWithoutBackEdges(DiGraphNode<N, E> a, DiGraphNode<N, E> b) {/private boolean checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> a, com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N, E> b) {/g'
grep -rl --include="*.java" "private class CheckProvidesCallback extends AbstractShallowCallback {" . | xargs sed -i 's/private class CheckProvidesCallback extends AbstractShallowCallback {/private class CheckProvidesCallback extends com.google.javascript.jscomp.NodeTraversal.AbstractShallowCallback {/g'
grep -rl --include="*.java" "class CheckRegExp extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/class CheckRegExp extends AbstractPostOrderCallback implements CompilerPass {/class CheckRegExp extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "private class CheckRequiresForConstructorsCallback implements Callback {" . | xargs sed -i 's/private class CheckRequiresForConstructorsCallback implements Callback {/private class CheckRequiresForConstructorsCallback implements com.google.javascript.jscomp.NodeTraversal.Callback {/g'
grep -rl --include="*.java" "final class CheckSideEffects extends AbstractPostOrderCallback implements HotSwapCompilerPass {" . | xargs sed -i 's/final class CheckSideEffects extends AbstractPostOrderCallback implements HotSwapCompilerPass {/final class CheckSideEffects extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements HotSwapCompilerPass {/g'
grep -rl --include="*.java" "static class StripProtection extends AbstractPostOrderCallback implements CompilerPass {" . | xargs sed -i 's/static class StripProtection extends AbstractPostOrderCallback implements CompilerPass {/static class StripProtection extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements CompilerPass {/g'
grep -rl --include="*.java" "final class CheckSuspiciousCode extends AbstractPostOrderCallback {" . | xargs sed -i 's/final class CheckSuspiciousCode extends AbstractPostOrderCallback {/final class CheckSuspiciousCode extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "public class GraphReachability<N, E> implements EdgeCallback<N, E> {" . | xargs sed -i 's/public class GraphReachability<N, E> implements EdgeCallback<N, E> {/public class GraphReachability<N, E> implements com.google.javascript.jscomp.graph.FixedPointGraphTraversal.EdgeCallback<N, E> {/g'
grep -rl --include="*.java" "class CheckUnreachableCode implements ScopedCallback {" . | xargs sed -i 's/class CheckUnreachableCode implements ScopedCallback {/class CheckUnreachableCode implements com.google.javascript.jscomp.NodeTraversal.ScopedCallback {/g'
grep -rl --include="*.java" "public boolean apply(EdgeTuple<Node, Branch> input) {" . | xargs sed -i 's/public boolean apply(EdgeTuple<Node, Branch> input) {/public boolean apply(EdgeTuple<Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> input) {/g'
grep -rl --include="*.java" "private class FindAbstractMethods extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class FindAbstractMethods extends AbstractPostOrderCallback {/private class FindAbstractMethods extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private class FindAssertionCalls extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class FindAssertionCalls extends AbstractPostOrderCallback {/private class FindAssertionCalls extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "private class FindObjectCreateCalls extends AbstractPostOrderCallback {" . | xargs sed -i 's/private class FindObjectCreateCalls extends AbstractPostOrderCallback {/private class FindObjectCreateCalls extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback {/g'
grep -rl --include="*.java" "class ClosureRewriteClass extends AbstractPostOrderCallback implements HotSwapCompilerPass {" . | xargs sed -i 's/class ClosureRewriteClass extends AbstractPostOrderCallback implements HotSwapCompilerPass {/class ClosureRewriteClass extends com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback implements HotSwapCompilerPass {/g'
